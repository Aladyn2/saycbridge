SAYC Bridge
A Python library and Google App Engine instance for bidding bridge hands
using Standard American Yellow Card conventions.

http://www.saycbridge.com/
https://play.google.com/store/apps/details?id=com.saycbridge.bridge
http://saycbot.appspot.com/

Setup

Development of SAYC Bridge (both the site and the core bidding logic)
requires the Google App Engine SDK:
https://developers.google.com/appengine/

Development of the Android wrapper requires Eclipse and the Android SDK:
http://developer.android.com/sdk/

Development of the iOS wrapper requires Apple's Xcode:
https://developer.apple.com/xcode/


Make Rules

make serve -- run a local copy of saycbridge.com for testing
make check -- check your latest changes against your kbb_baseline.txt
make accept -- replace the current baseline file with your last make check results
make clean -- remove stray *.pyc files
make baseline -- create a new local kbb_baseline.txt file


Testing Scripts

./test-hand HAND_STRING [HISTORY_STRING] -- Bids a single hand.
./test-sayc -- Runs the unit tests.
./saycbot.py [-a] -- Command-line interactive bidder.  -a auto-bids all hands (for finding crashes).


Code Layout

dist -- All the code for the various "App" versions of SAYCBridge, incuding iOS, Android and Chrome App
gae -- The Google App Engine (GAE) Python back-end for SAYCBridge
old -- Old planning documents
pr -- Images, logos, screenshots, etc needed for submisison to the various App stores

gae/core -- Basic Python objects for dealing with bridge hands/boards
gae/handlers -- GAE handlers (code to respond to requests at www.saycbridge.com)
gae/kbb -- Knowledge Based Bidder (current "stable" bidder)
gae/models -- GAE models (storage class for GAE)
gae/scripts -- CoffeeScript files supporting the web-front-end for the bidder
gae/templates -- GAE templates (generate the HTML and JSON served at www.saycbridge.com)
gae/third_party -- External code goes here
gae/z3b -- Z3 Bidder (experimental new bidder on top of MSR's Z3 Theorem Prover)
